name: Update Dependencies

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Update dependencies
        run: |
          # Update lock file
          uv lock --upgrade

          # Check if there are any changes
          if git diff --quiet uv.lock; then
            echo "No dependency updates available"
            echo "has_updates=false" >> $GITHUB_ENV
          else
            echo "Dependency updates found"
            echo "has_updates=true" >> $GITHUB_ENV
          fi

      - name: Test with updated dependencies
        if: env.has_updates == 'true'
        run: |
          uv sync --extra dev
          uv run pytest -x --tb=short
        env:
          DATA_EXTRACTOR_ENABLE_JAVASCRIPT: "false"

      - name: Create Pull Request
        if: env.has_updates == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(deps): update dependencies"
          title: "chore(deps): Update dependencies"
          body: |
            ## Dependency Updates

            This PR updates project dependencies to their latest versions.

            ### Changes
            - Updated `uv.lock` with latest compatible versions
            - All tests pass with updated dependencies

            ### Testing
            - ✅ All tests pass
            - ✅ Package builds successfully
            - ✅ No breaking changes detected

            Auto-generated by GitHub Actions.
          branch: update-dependencies
          delete-branch: true
          labels: |
            dependencies
            automated

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run security audit
        run: |
          # Install pip-audit
          uv add --dev pip-audit

          # Run audit on installed packages
          uv run pip-audit --format=json --output=audit-report.json || true
          uv run pip-audit

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-report
          path: audit-report.json
          retention-days: 30
